<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--属性文件-->
    <context:property-placeholder file-encoding="utf8" location="classpath*:*.properties" ignore-unresolvable="true"/>

    <!-- 启动Springmvc注解驱动 -->
    <mvc:annotation-driven />

    <!-- 自动将控制器加载到bean -->
    <context:component-scan base-package="com.dlq.blog">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 配置处理静态资源的请求 -->
    <!-- <mvc:resources mapping="assets/js/**" location="assets/js/" />
    <mvc:resources mapping="assets/css/**" location="assets/css/" /> -->

    <!-- 配置视图解析器 -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="" />
        <property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
        <!-- <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" /> -->
    </bean>

    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="authInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="authInterceptor" class="com.dlq.blog.filter.AuthFilter"/>

    <!--放在此处，开启此dispacher的aop，不能放在root webApplicationContext的配置中-->
    <aop:aspectj-autoproxy/>

</beans>